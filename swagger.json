{
  "openapi": "3.0.0",
  "info": {
    "title": "Gemini Vector Search API",
    "description": "Vector search system based on Google Gemini model, providing document management, vector retrieval and intelligent Q&A capabilities",
    "version": "1.0.0",
    "contact": {
      "name": "API Support Team"
    }
  },
  "servers": [
    {
      "url": "http://35.246.2.155:8000/api/v1",
      "description": "Main Server"
    }
  ],
  "components": {
    "schemas": {
      "EmbeddingRequest": {
        "type": "object",
        "required": ["text"],
        "properties": {
          "text": {
            "type": "string",
            "description": "Text that needs embedding vector generation"
          }
        }
      },
      "EmbeddingResponse": {
        "type": "object",
        "properties": {
          "embedding": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "description": "Generated embedding vector"
          },
          "dimensions": {
            "type": "integer",
            "description": "Dimensions of the embedding vector"
          }
        }
      },
      "CompletionRequest": {
        "type": "object",
        "required": ["prompt"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Prompt text"
          },
          "use_context": {
            "type": "boolean",
            "description": "Whether to use context"
          },
          "context_query": {
            "type": "string",
            "description": "Context query"
          },
          "max_context_docs": {
            "type": "integer",
            "description": "Maximum number of context documents"
          },
          "context": {
            "type": "string",
            "description": "Manually provided context"
          },
          "temperature": {
            "type": "number",
            "format": "float",
            "description": "Temperature parameter, controls output randomness"
          },
          "use_chunks": {
            "type": "boolean",
            "description": "Whether to use document chunks for search",
            "default": true
          }
        }
      },
      "CompletionResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "Generated response"
          }
        }
      },
      "DocumentCreate": {
        "type": "object",
        "required": ["title", "content"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Document title"
          },
          "content": {
            "type": "string",
            "description": "Document content"
          },
          "source": {
            "type": "string",
            "description": "Document source"
          },
          "metadata": {
            "type": "object",
            "description": "Document metadata"
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Document ID"
          },
          "title": {
            "type": "string",
            "description": "Document title"
          },
          "content": {
            "type": "string",
            "description": "Document content"
          },
          "source": {
            "type": "string",
            "description": "Document source"
          },
          "metadata": {
            "type": "object",
            "description": "Document metadata"
          },
          "chunks": {
            "type": "integer",
            "description": "Number of document chunks"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation time"
          }
        }
      },
      "DocumentsList": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": "Document list"
          },
          "total": {
            "type": "integer",
            "description": "Total number of documents"
          }
        }
      },
      "QueryRequest": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "Query text"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of documents to return"
          },
          "source_filter": {
            "type": "string",
            "description": "Filter documents by source"
          },
          "use_chunks": {
            "type": "boolean",
            "description": "Whether to use document chunks for search",
            "default": true
          }
        }
      },
      "QueryResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Chunk ID"
                },
                "document_id": {
                  "type": "string",
                  "description": "Document ID"
                },
                "title": {
                  "type": "string",
                  "description": "Document title"
                },
                "content": {
                  "type": "string",
                  "description": "Chunk content"
                },
                "source": {
                  "type": "string",
                  "description": "Document source"
                },
                "similarity": {
                  "type": "number",
                  "format": "float",
                  "description": "Similarity score"
                },
                "metadata": {
                  "type": "object",
                  "description": "Metadata"
                }
              }
            },
            "description": "Query results"
          }
        }
      },
      "IntegrationRequest": {
        "type": "object",
        "required": ["prompt"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Prompt text"
          },
          "context_query": {
            "type": "string",
            "description": "Context query"
          },
          "max_context_docs": {
            "type": "integer",
            "description": "Maximum number of context documents"
          },
          "source_filter": {
            "type": "string",
            "description": "Filter documents by source"
          },
          "debug": {
            "type": "boolean",
            "description": "Whether to return debug information"
          },
          "use_chunks": {
            "type": "boolean",
            "description": "Whether to use document chunks for search",
            "default": true
          }
        }
      },
      "IntegrationResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "Generated response"
          },
          "debug_info": {
            "type": "object",
            "description": "Debug information (only returned when debug=true)"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "API status"
          }
        }
      },
      "DatabaseStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Database connection status"
          },
          "document_count": {
            "type": "integer",
            "description": "Number of documents"
          },
          "chunk_count": {
            "type": "integer",
            "description": "Number of chunks"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Error details"
          }
        }
      },
      "UploadPdfResponse": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "string",
            "description": "Uploaded document ID"
          },
          "title": {
            "type": "string",
            "description": "Document title"
          },
          "pages": {
            "type": "integer",
            "description": "Number of PDF pages"
          },
          "chunks": {
            "type": "integer",
            "description": "Number of chunks"
          }
        }
      },
      "ClearDatabaseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status"
          },
          "deleted_documents": {
            "type": "integer",
            "description": "Number of deleted documents"
          },
          "deleted_chunks": {
            "type": "integer",
            "description": "Number of deleted chunks"
          }
        }
      },
      "ClearAlloyDBResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status"
          },
          "deleted_tables": {
            "type": "integer",
            "description": "Number of cleared tables"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Operation time"
          }
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Check API health status",
        "description": "Returns the health status of the API",
        "responses": {
          "200": {
            "description": "API is running normally",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/database-status": {
      "get": {
        "tags": ["System"],
        "summary": "Check database connection status",
        "description": "Returns the database connection status and document count",
        "responses": {
          "200": {
            "description": "Database connection is normal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "Database connection error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/embedding": {
      "post": {
        "tags": ["API"],
        "summary": "Generate text embedding vector",
        "description": "Use Gemini model to generate embedding vector for text",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated embedding vector",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/completion": {
      "post": {
        "tags": ["API"],
        "summary": "Generate text completion",
        "description": "Use Gemini model to generate text completion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated text completion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "post": {
        "tags": ["API"],
        "summary": "Add document",
        "description": "Add new document and generate embedding vector",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["API"],
        "summary": "Get document list",
        "description": "Get list of all documents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of documents to return",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page offset",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter documents by source",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsList"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{document_id}": {
      "get": {
        "tags": ["API"],
        "summary": "Get document details",
        "description": "Get detailed information of a single document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["API"],
        "summary": "Delete document",
        "description": "Delete specified document and all its chunks",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Operation status"
                    },
                    "deleted_chunks": {
                      "type": "integer",
                      "description": "Number of deleted chunks"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query": {
      "post": {
        "tags": ["API"],
        "summary": "Query similar documents",
        "description": "Query documents similar to input text in vector database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integration": {
      "post": {
        "tags": ["API"],
        "summary": "Integration query",
        "description": "Combine vector search and Gemini model to answer questions",
        "parameters": [
          {
            "name": "source_filter",
            "in": "query",
            "description": "Filter results by document source",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "debug",
            "in": "query",
            "description": "Return detailed debugging information",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "force_use_documents",
            "in": "query",
            "description": "Force use document content answer even if no high similarity match found",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/upload-pdf": {
      "post": {
        "tags": ["API"],
        "summary": "Upload PDF file",
        "description": "Upload PDF file and parse its content",
        "parameters": [
          {
            "name": "use_intelligent_chunking",
            "in": "query",
            "description": "Whether to use Gemini for intelligent chunking",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "chunk_size",
            "in": "query",
            "description": "If not using intelligent chunking, fixed chunk size",
            "schema": {
              "type": "integer",
              "default": 1000
            }
          },
          {
            "name": "overlap",
            "in": "query",
            "description": "If not using intelligent chunking, fixed overlap size",
            "schema": {
              "type": "integer",
              "default": 200
            }
          },
          {
            "name": "clear_existing",
            "in": "query",
            "description": "Clear documents in database before upload",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file"
                  },
                  "source": {
                    "type": "string",
                    "description": "Document source"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "JSON format metadata"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PDF upload successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadPdfResponse"
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/clear-database": {
      "post": {
        "tags": ["System"],
        "summary": "Clear database",
        "description": "Clear all documents and chunks in the database",
        "parameters": [
          {
            "name": "confirmation",
            "in": "query",
            "description": "Security check parameter for operation confirmation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearDatabaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Confirmation parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/clear-alloydb": {
      "post": {
        "tags": ["System"],
        "summary": "Clear AlloyDB",
        "description": "Clear all data tables in AlloyDB",
        "parameters": [
          {
            "name": "confirmation",
            "in": "query",
            "description": "Security check parameter for operation confirmation, must be 'confirm_clear_alloydb'",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AlloyDB cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearAlloyDBResponse"
                }
              }
            }
          },
          "400": {
            "description": "Confirmation parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Clear operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analyze-documents": {
      "post": {
        "tags": ["API"],
        "summary": "Analyze document content",
        "description": "Use Gemini to analyze document content and provide summary",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of document IDs to analyze"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["summary", "key_points", "topics"],
                    "description": "Analysis type"
                  }
                },
                "required": ["document_ids", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document analysis successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Analysis result"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request parameter error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
} 